.\" Man page generated from reStructuredText.
.
.TH "INSPEC" "1" "September 09, 2016" "" "inspec man page"
.SH NAME
inspec \- InSpec Man Page
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Use the InSpec CLI to run audit tests against targets using SSH, WinRM, locally, or on Docker containers.
.SH COMMON OPTIONS
.sp
The following options may be used with any of the InSpec CLI subcommands:
.INDENT 0.0
.TP
.B \fB\-b\fP, \fB\-\-backend\fP
Specify the backend. Possible values: \fBdocker\fP, \fBlocal\fP, \fBssh\fP, or \fBwinrm\fP\&.
.TP
.B \fB\-\-diagnose\fP
Use to show diagnostics information.
.TP
.B \fB\-\-disable_sudo\fP
Use to prevent remote scanning via sudo. Default value: \fBfalse\fP\&.
.TP
.B \fB\-\-host\fP
The remote host to be tested.
.TP
.B \fB\-\-json PATH\fP
Use to read all tests specified by \fBPATH\fP, and then generate a summary in JSON format.
.TP
.B \fB\-\-key\-files\fP
The login key or certificate file required for remote scanning.
.TP
.B \fB\-l LEVEL\fP, \fB\-\-log\-level LEVEL\fP
Use to specify the log level. Possible values: \fBdebug\fP, \fBerror\fP, \fBinfo\fP (default), or \fBwarn\fP\&.
.TP
.B \fB\-\-log\-location\fP
Use to specify the location to which log messages are sent. Possible values: \fBSTDOUT\fP (default) and \fBSTDERR\fP\&.
.TP
.B \fB\-\-password\fP
The login password for remote scanning.
.TP
.B \fB\-\-path\fP
The login path used to connect to WinRM targets.
.TP
.B \fB\-\-port\fP
The port over which remote scanning will occur.
.TP
.B \fB\-\-self_signed\fP
Use to allow remote scanning with self\-signed certificates for WinRM targets.  Default value: \fBfalse\fP\&.
.TP
.B \fB\-\-ssl\fP
Use to require transport\-layer encryption via SSL for WinRM targets. Default value: \fBfalse\fP\&.
.TP
.B \fB\-\-sudo_options\fP
Additional options that may be required by the sudo password for remote scanning. Default value: \fB\(aq\(aq\fP\&.
.TP
.B \fB\-\-sudo_password\fP
The sudo password, if required.
.TP
.B \fB\-t\fP, \fB\-\-target\fP
The URI for the target of a remote scan, preceded by the target\(aqs backend. For example: \fBbackend://user:pass@host:port\fP, where \fBbackend\fP is one of \fBdocker\fP, \fBlocal\fP, \fBssh\fP, or \fBwinrm\fP\&.
.TP
.B \fB\-\-user\fP
The login user for remote scanning.
.UNINDENT
.SH INSPEC ARCHIVE
.sp
Each profile consists of multiple files. Use an profile archive to simplify profile distribution by collecting all of these files into a single location. The InSpec profile archive format supports:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
tar.gz and gzip (default)
.IP \(bu 2
Zip
.UNINDENT
.UNINDENT
.UNINDENT
.sp
InSpec profile archives
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
MUST be named with the standard suffix
.IP \(bu 2
MUST be a tar.gz or Zip formatted file
.IP \(bu 2
MUST not contain duplicate entries
.IP \(bu 2
MAY be compressed with gzip
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Use \fBinspec archive\fP to create an archive of the target profile. By default, a tar.gz file is generated on UNIX platforms and a Zip file is generated on Microsoft Windows and Mac OS X\&.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec archive (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Options
.sp
This subcommand has additional options:
.INDENT 0.0
.TP
.B \fB\-\-ignore\-errors\fP
Use to ignore warnings that may exist during the creation of the profile archive.
.TP
.B \fB\-\-output PATH\fP
Use to generate the profile archive to the specified path.
.TP
.B \fB\-\-overwrite\fP
Use to overwrite an existing profile archive.
.TP
.B \fB\-\-tar\fP
Use to generate a profile archive with tar.gz\&.
.TP
.B \fB\-\-zip\fP
Use to generate a profile archive with Zip\&.
.UNINDENT
.SS Examples
.sp
The following examples show how to use this subcommand.
.sp
\fBCreate a profile archive as zip\fP
.sp
To generate a profile archive with Zip:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec archive examples/profile \-\-zip
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBCreate a profile archive as tar\fP
.sp
To generate a profile archive with tar.gz:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec archive examples/profile \-\-tar
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INSPEC CHECK
.sp
Use \fBinspec check\fP to verify all tests at the specified path.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec check PATH (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
where:
.INDENT 0.0
.IP \(bu 2
\fBPATH\fP is the location against which tests are run
.UNINDENT
.SS Examples
.sp
The following examples show how to use this subcommand.
.sp
\fBVerify a profile\fP
.sp
Use the \fBinspec check\fP command to verify the implementation of a profile:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec check examples/profile
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INSPEC DETECT
.sp
Use \fBinspec detect\fP to detect the platform for the target.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec detect (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For example, if the configuration on the target is:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
id=$( docker run \-dti ubuntu:14.04 /bin/bash )
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
the following command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec detect \-t docker://$id
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
will return:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"family":"ubuntu","release":"14.04","arch":null}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Options
.sp
This subcommand has additional options:
.INDENT 0.0
.TP
.B \fB\-\-format\fP
Use to specify the formatter. Possible values: \fBcli\fP, \fBdocumentation\fP, \fBjson\fP, \fBjson\-min\fP, or \fBprogress\fP\&.
.UNINDENT
.SH INSPEC ENV
.sp
Use \fBinspec exec\fP to output configuration information appropriate to the InSpec CLI\&.
.SH INSPEC EXEC
.sp
Use \fBinspec exec\fP to run all tests at the specified path.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec PATHS (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
where:
.INDENT 0.0
.IP \(bu 2
\fBPATHS\fP is one (or more) locations against which tests are run
.UNINDENT
.SS Options
.sp
This subcommand has additional options:
.INDENT 0.0
.TP
.B \fB\-\-attrs PATH\fP
Use to load a YAML file at the specified path. This file contains attribute values that are required to run a test successfully, such as a password or user name.
.TP
.B \fB\-\-color\fP
Use to specify if color should be used in output.
.TP
.B \fB\-\-controls\fP
Use to specify an array of controls to be run. Any control not listed in the array will be ignored.
.TP
.B \fB\-\-format\fP
Use to specify the formatter. Possible values: \fBcli\fP, \fBdocumentation\fP, \fBjson\fP, \fBjson\-min\fP, or \fBprogress\fP\&.
.TP
.B \fB\-\-id\fP
Use to attach a profile identifier to all test results.
.UNINDENT
.SS Examples
.sp
The following examples show how to use this subcommand.
.sp
\fBRun a test locally\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec test.rb
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBRun a test on a remote host using SSH\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec test.rb \-t ssh://user@hostname
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBRun a test on a remote host using WinRM\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec test.rb \-t winrm://Administrator@windowshost \-\-password \(aqpassword\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBRun a test against a Docker container\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec test.rb \-t docker://container_id
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBRun the ssl\-benchmark example profile\fP
.sp
There are two ways to run the \fBssl\-benchmark\fP example profile to test SSL via the \fBssl\fP InSpec audit resource\&.
.sp
Clone the profile:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ git clone https://github.com/dev\-sec/ssl\-benchmark
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and then run:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec ssl\-benchmark
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or execute the profile directly via URL:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec exec https://github.com/dev\-sec/ssl\-benchmark
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INSPEC HELP
.sp
Use \fBinspec help\fP to print help for the InSpec CLI from the command shell.
.SH INSPEC JSON
.sp
Use \fBinspec json\fP to read all tests at the specified path, and then generate a JSON summary to standard output (stdout) or printed to the command shell.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec json PATH (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
where:
.INDENT 0.0
.IP \(bu 2
\fBPATH\fP is the location against which tests are run
.UNINDENT
.SS Options
.sp
This subcommand has additional options:
.INDENT 0.0
.TP
.B \fB\-\-id\fP
Use to attach a profile identifier to all test results.
.TP
.B \fB\-o\fP, \fB\-\-output\fP
Use to generate the JSON profile to standard output (stdout).
.TP
.B \fB\-p\fP, \fB\-\-print\fP
Use to print the JSON profile to the command shell.
.UNINDENT
.SH INSPEC SHELL
.sp
Use \fBinspec shell\fP to open an interactive debugging shell.
.SS Syntax
.sp
This subcommand has the following syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec shell (options)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Options
.sp
This subcommand has additional options:
.INDENT 0.0
.TP
.B \fB\-c COMMAND\fP, \fB\-\-command COMMAND\fP
Use to specify a command to be run instead of launching the InSpec shell.
.TP
.B \fB\-\-format\fP
Use to specify the formatter. Possible values: \fBcli\fP, \fBdocumentation\fP, \fBjson\fP, \fBjson\-min\fP, or \fBprogress\fP\&.
.UNINDENT
.SS Debug Controls
.sp
The following example shows an InSpec control that uses Ruby variables to instantiate an InSpec resource once, and then use that content in multipLe tests:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
control \(aqcheck\-perl\(aq do
  impact 0.3
  title \(aqCheck perl compiled options and permissions\(aq
  perl_out = command(\(aqperl \-V\(aq)
  #require \(aqpry\(aq; binding.pry;
  describe perl_out do
    its(\(aqexit_status\(aq) { should eq 0 }
    its(\(aqstdout\(aq) { should match (/USE_64_BIT_ALL/) }
    its(\(aqstdout\(aq) { should match (/useposix=true/) }
    its(\(aqstdout\(aq) { should match (/\-fstack\-protector/) }
  end

  # extract an array of include directories
  perl_inc = perl_out.stdout.partition(\(aq@INC:\(aq).last.strip.split("\en")
  # ensure include directories are only writable by \(aqowner\(aq
  perl_inc.each do |path|
    describe directory(path.strip) do
      it { should_not be_writable.by(\(aqgroup\(aq) }
      it { should_not be_writable.by(\(aqother\(aq) }
    end
  end
end
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Use Pry
.sp
The previous example comments out the \fBrequire \(aqpry\(aq; binding.pry;\fP line. Remove the \fB#\fP prefix, and then re\-run the control. The execution of the control will stop at that line and open a Pry shell from which troubleshooting, printing variables, viewing available methods, etc. may be one. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[1] pry> perl_out.exit_status
=> 0
[2] pry> perl_out.stderr
=> ""
[3] pry> ls perl_out
Inspec::Plugins::Resource#methods: inspect
Inspec::Resources::Cmd#methods: command  exist?  exit_status  result  stderr  stdout  to_s
Inspec::Plugins::ResourceCommon#methods: resource_skipped  skip_resource
Inspec::Resource::Registry::Command#methods: inspec
instance variables: @__backend_runner__  @__resource_name__  @command  @result
[4] pry> perl_out.stdout.partition(\(aq@INC:\(aq).last.strip.split("\en")
=> ["/Library/Perl/5.18/darwin\-thread\-multi\-2level",
 "    /Library/Perl/5.18",
\&...REDACTED...
[5] pry> exit    # or abort
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Use inspec shell
.sp
Use Pry inside both the controls and resources. Similarly, for development and testing, use \fBinspec shell\fP which is based on Pry, for example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ inspec shell
Welcome to the interactive InSpec Shell
To find out how to use it, type: help

inspec> command(\(aqls /home/gordon/git/inspec/docs\(aq).stdout
=> "ctl_inspec.rst\endsl_inspec.rst\endsl_resource.rst\en"
inspec> command(\(aqls\(aq).stdout.split("\en")
=> ["ctl_inspec.rst", "dsl_inspec.rst", "dsl_resource.rst"]

inspec> help command
Name: command

Description:
Use the command InSpec audit resource to test an arbitrary command that is run on the system.

Example:
describe command(\(aqls \-al /\(aq) do
  it { should exist }
  its(\(aqstdout\(aq) { should match /bin/ }
  its(\(aqstderr\(aq) { should eq \(aq\(aq }
  its(\(aqexit_status\(aq) { should eq 0 }
end
.ft P
.fi
.UNINDENT
.UNINDENT
.SH INSPEC VERSION
.sp
Use \fBinspec version\fP to print the version of the InSpec CLI\&.
.SH AUTHOR
Chef Software, Inc.
.SH COPYRIGHT
This work is licensed under a Creative Commons Attribution 3.0 Unported License.
.\" Generated by docutils manpage writer.
.
