=====================================================
chef-manage-ctl (executable)
=====================================================
`[edit on GitHub] <https://github.com/chef/chef-web-docs/blob/master/chef_master/source/ctl_manage.rst>`__

.. meta:: 
    :robots: noindex 

.. tag chef_automate_mark

.. image:: ../../images/a2_docs_banner.svg
   :target: https://automate.chef.io/docs

.. end_tag

.. tag EOL_manage

.. warning:: Chef Manage is `deprecated </versions.html#deprecated-products-and-versions>`__. The `Chef Enterprise Automation Stack <https://www.chef.io/products/enterprise-automation-stack>`_ allows you to define infrastructure, security policies, and application dependencies as code, deliver the stack via an automated pipeline to any platform, and deploy, observe, and manage the stack over its lifecycle. Chef Automate is included as part of the Chef license agreement and is `available via subscription <https://www.chef.io/pricing/>`_.

.. end_tag


.. tag EOL_a1

.. danger:: This documentation applies to a deprecated product </versions.html#deprecated-products-and-versions>`__. Chef Automate includes newer out-of-the-box compliance profiles, an improved compliance scanner with total cloud scanning functionality, better visualizations, role-based access control and many other features. Chef Automate is included as part of the Workflow license agreement and is `available via subscription <https://www.chef.io/pricing/>`_.

.. end_tag

The Chef management console includes a command-line utility named ``chef-manage-ctl``. This command-line tool is used to reconfigure, cleanse (reset the Chef management console to initial configuration settings), and uninstall the Chef management console.

cleanse
=====================================================
The ``cleanse`` subcommand is used to re-set the Chef management console to the state it was in prior to the first time the ``reconfigure`` subcommand is run. This command will destroy all data, configuration files, and logs. The software that was put on-disk by the package installation will remain; re-run ``chef-manage-ctl reconfigure`` to recreate the default data and configuration files.

This subcommand has the following syntax:

.. code-block:: bash

   $ chef-manage-ctl cleanse

help
=====================================================
The ``help`` subcommand is used to print a list of all available ``chef-manage-ctl`` commands.

This subcommand has the following syntax:

.. code-block:: bash

   $ chef-manage-ctl help

reconfigure
=====================================================
The ``reconfigure`` subcommand is used when changes are made to the manage.rb file to reconfigure the server. When changes are made to the manage.rb file, they will not be applied to the Chef management console configuration until after this command is run.

This subcommand has the following syntax:

.. code-block:: bash

   $ chef-manage-ctl reconfigure

show-config
=====================================================
The ``show-config`` subcommand is used to view the configuration that will be generated by the ``reconfigure`` subcommand. This command is most useful in the early stages of a deployment to ensure that everything is built properly prior to installation.

This subcommand has the following syntax:

.. code-block:: bash

   $ chef-manage-ctl show-config

uninstall
=====================================================
The ``uninstall`` subcommand is used to manage the hooks between runit and ``sysvinit`` or ``upstart``. This subcommand does not `uninstall the Chef management console </uninstall.html#chef-manage>`__ or remove ``.rpm`` or ``.deb`` files.

This subcommand has the following syntax:

.. code-block:: bash

   $ chef-manage-ctl uninstall
