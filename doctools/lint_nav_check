#!/usr/bin/env ruby

# This script checks if the topic is present in the left-nav and on the index page (i.e. the sitemap).

NAVREGEX = /\"url\": \"\/(\S+).html.*\"/
RELREGEX = /<\/(\S+)>/
ABSREGEX = /<https:\/\/docs\.chef\.io\/(\S+).html#\S+>/

@files = []

def list_entries(file, regexoptions = {})

  # Output all matching entries to a temp array for further processing.
  temp = File.read(file).scan(regexoptions[:regex1]).flatten

  #Do another pass through the target file with a different regex and then append the results to the previous array.
  if regexoptions.key?(:regex2)
    temp2 = File.read(file).scan(regexoptions[:regex2]).flatten
    temp.push(*temp2)
  end

  # Remove the duplicate entries in the array.
  temp.uniq!

  # Sort the array so that it can be compared against the list of source files.
  temp.sort!

  # Return the entries that are in the source array, but not in the array created from the target file.
  @files - temp
end

def generate_source_array

  # Source files that should be excluded from nav and sitemap lists.
  whitelisted = ['index', 'page_not_found', 'feedback']

  # Array from source dir to check against array from left nav.
  @files = Dir.glob("*.rst")
  @files.each { |file| file.gsub!(/(.*).rst/, '\1') }

  # Source topics that are whitelisted and should not be included in the returned list of source files.
  @files -= whitelisted
end

generate_source_array

puts 'Source files that are not included in the left nav:'
nav = list_entries('./_templates/nav-docs.html', regex1: NAVREGEX)
puts nav
puts

puts 'Source files that are not included in the index:'
index = list_entries('index.rst', regex1: RELREGEX, regex2: ABSREGEX)
puts index
puts

puts 'Here links to files that are in the nav but not the index:'
puts (nav - index)
