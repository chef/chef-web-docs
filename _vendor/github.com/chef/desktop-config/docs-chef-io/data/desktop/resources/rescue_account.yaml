---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: rescue_account
resource_description_list:
- markdown: Use the **rescue_account** resource to provide Administrators with a rescue
    account.
resource_new_in: '1.0'
syntax_full_code_block: |-
  rescue_account 'name' do
    account_name      String
    password          String
    action            Symbol # defaults to :create if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`rescue_account` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`account_name` and `password` are the properties available to this resource."
actions_list:
  :create:
    markdown: "Creates the user specified in the property field."
  :delete:
    markdown: "Deletes the named user."
  :disable:
    markdown: "Turns off the account if it was enabled."
  :enable:
    markdown: "Turns the account on if previously disabled."
  :nothing:
    shortcode: resources_common_actions_nothing.md
properties_list:
- property: account_name
  ruby_type: String
  required: true
  description_list:
  - markdown: Name of the user to be created as a rescue account
- property: password
  ruby_type: String
  required: true
  description_list:
  - markdown: Corresponding password for that user
examples: |
  **Create a managed user account**:

  ```ruby
  rescue_account 'Configure an Admin level account for IT to use' do
    account_name 'MyAdmin'
    password '123Opscode!!'
    action :create
  end
  ```

  **Delete a managed user account**:

  ```ruby
  rescue_account 'Delete an Admin level account for IT to use' do
    account_name 'MyAdmin'
    action :delete
  end
  ```

  **Enable an existing managed user account**:

  ```ruby
  rescue_account 'Enable an Admin level account for IT to use' do
    account_name 'MyAdmin'
    action :enable
  end
  ```

  **Disable an existing managed user account**:

  ```ruby
  rescue_account 'Disable an Admin level account' do
    account_name 'MyAdmin'
    action :disable
  end
  ```
