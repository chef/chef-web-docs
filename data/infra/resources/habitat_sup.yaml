---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: habitat_sup
resource_description_list:
- markdown: Use the **habitat_sup** resource to runs a Chef Habitat supervisor for
    one or more Chef Habitat services. The resource is commonly used in conjunction
    with `habitat_service` which will manage the services loaded and started within
    the supervisor.
resource_new_in: '17.3'
syntax_full_code_block: |-
  habitat_sup 'name' do
    auth_token                    String
    auto_update                   true, false # default value: false
    bldr_url                      String
    event_stream_application      String
    event_stream_cert             String
    event_stream_environment      String
    event_stream_site             String
    event_stream_token            String
    event_stream_url              String
    gateway_auth_token            String
    hab_channel                   String
    health_check_interval         String, Integer
    keep_latest                   String
    launcher_version              String
    license                       String
    limit_no_files                String
    listen_ctl                    String
    listen_gossip                 String
    listen_http                   String
    org                           String # default value: "default"
    peer                          String, Array
    permanent_peer                true, false # default value: false
    ring                          String
    service_version               String
    sup_version                   String
    toml_config                   true, false # default value: false
    update_condition              String
    action                        Symbol # defaults to :run if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`habitat_sup` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`auth_token`, `auto_update`, `bldr_url`, `event_stream_application`, `event_stream_cert`,
  `event_stream_environment`, `event_stream_site`, `event_stream_token`, `event_stream_url`,
  `gateway_auth_token`, `hab_channel`, `health_check_interval`, `keep_latest`, `launcher_version`,
  `license`, `limit_no_files`, `listen_ctl`, `listen_gossip`, `listen_http`, `org`,
  `peer`, `permanent_peer`, `ring`, `service_version`, `sup_version`, `toml_config`,
  and `update_condition` are the properties available to this resource."
actions_list:
  :nothing:
    shortcode: resources_common_actions_nothing.md
  :run:
    markdown: The `run` action handles installing Habitat using the `habitat_install`
      resource, ensures that the appropriate versions of the `core/hab-sup` and `core/hab-launcher`
      packages are installed using `habitat_package`, and then drops off the appropriate
      init system definitions and manages the service. (default)
  :stop:
    markdown:
properties_list:
- property: auth_token
  ruby_type: String
  required: false
  description_list:
  - markdown: Auth token for accessing a private organization on bldr. This value
      is templated into the appropriate service file.
- property: auto_update
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Passes `--auto-update`. This will set the Habitat supervisor to automatically
      update itself any time a stable version has been released.
- property: bldr_url
  ruby_type: String
  required: false
  description_list:
  - markdown: The Habitat Builder URL for the `habitat_package` resource, if needed.
- property: event_stream_application
  ruby_type: String
  required: false
  description_list:
  - markdown: The name of your application that will be displayed in the Chef Automate
      Applications Dashboard.
- property: event_stream_cert
  ruby_type: String
  required: false
  description_list:
  - markdown: With `Intermediary Certificates` or, Automate 2 being set to use TLS
      with a valid cert, you will need to provide `Habitat` with your certificate
      for communication with Automate to work. [Follow these steps!](https://automate.chef.io/docs/applications-setup/#share-the-tls-certificate-with-chef-habitat).
- property: event_stream_environment
  ruby_type: String
  required: false
  description_list:
  - markdown: The application environment for the supervisor, this is for grouping
      in the Applications Dashboard.
- property: event_stream_site
  ruby_type: String
  required: false
  description_list:
  - markdown: Application Dashboard label for the 'site' of the application - can
      be filtered in the dashboard.
- property: event_stream_token
  ruby_type: String
  required: false
  description_list:
  - markdown: Chef Automate token for sending application event stream data.
- property: event_stream_url
  ruby_type: String
  required: false
  description_list:
  - markdown: "`AUTOMATE_HOSTNAME:4222` - the Chef Automate URL with port 4222 specified"
  - note:
      markdown: The port can be changed if needed.
- property: gateway_auth_token
  ruby_type: String
  required: false
  description_list:
  - markdown: Auth token for accessing the supervisor's HTTP gateway. This value is
      templated into the appropriate service file.
- property: hab_channel
  ruby_type: String
  required: false
  description_list:
  - markdown: The channel to install Habitat from. Defaults to stable
- property: health_check_interval
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The interval (seconds) on which to run health checks.
- property: keep_latest
  ruby_type: String
  required: false
  description_list:
  - markdown: Automatically cleans up old packages. If this flag is enabled, service
      startup will initiate an uninstall of all previous versions of the associated
      package. This also applies when a service is restarted due to an update. If
      a number is passed to this argument, that number of latest versions will be
      kept. The same logic applies to the Supervisor package `env:HAB_KEEP_LATEST_PACKAGES=1`
  - note:
      markdown: This requires Habitat version `1.5.86+`
- property: launcher_version
  ruby_type: String
  required: false
  description_list:
  - markdown: Allows you to choose which version of launcher to install.
- property: license
  ruby_type: String
  required: false
  allowed_values: '"accept"'
  description_list:
  - markdown: Specifies acceptance of habitat license when set to `accept`.
- property: limit_no_files
  ruby_type: String
  required: false
  description_list:
  - markdown: allows you to set LimitNOFILE in the systemd service when used
  - note:
      markdown: Linux Only.
- property: listen_ctl
  ruby_type: String
  required: false
  description_list:
  - markdown: Only valid for `:run` action, passes `--listen-ctl` with the specified
      address and port, e.g., `0.0.0.0:9632`, to the hab command.
- property: listen_gossip
  ruby_type: String
  required: false
  description_list:
  - markdown: Only valid for `:run` action, passes `--listen-gossip` with the specified
      address and port, e.g., `0.0.0.0:9638`, to the hab command.
- property: listen_http
  ruby_type: String
  required: false
  description_list:
  - markdown: Only valid for `:run` action, passes `--listen-http` with the specified
      address and port, e.g., `0.0.0.0:9631`, to the hab command.
- property: org
  ruby_type: String
  required: false
  default_value: default
  description_list:
  - markdown: Only valid for `:run` action, passes `--org` with the specified org
      name to the hab command.
- property: peer
  ruby_type: String, Array
  required: false
  description_list:
  - markdown: Only valid for `:run` action, passes `--peer` with the specified initial
      peer to the hab command.
- property: permanent_peer
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Only valid for `:run` action, passes `--permanent-peer` to the hab command.
- property: ring
  ruby_type: String
  required: false
  description_list:
  - markdown: Only valid for `:run` action, passes `--ring` with the specified ring
      key name to the hab command.
- property: service_version
  ruby_type: String
  required: false
  description_list:
  - markdown: Allows you to choose which version of the **_Windows Service_** to install.
- property: sup_version
  ruby_type: String
  required: false
  description_list:
  - markdown: Allows you to choose which version of supervisor you would like to install.
  - note:
      markdown: If a version is provided, it will also install that version of habitat
        if not previously installed.
- property: toml_config
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Supports using the Supervisor toml configuration instead of passing
      exec parameters to the service, [reference](https://www.habitat.sh/docs/reference/#supervisor-config).
- property: update_condition
  ruby_type: String
  required: false
  description_list:
  - markdown: Passes `--update-condition` dictating when this service should updated.
      Defaults to `latest`. Options are `latest` or `track-channel` **_
  - note:
      markdown: |-
        This requires a minimum habitat version of 1.5.71_**
              - `latest`: Runs the latest package that can be found in the configured channel and local packages.
              - `track-channel`: Always run what is at the head of a given channel. This enables service rollback where demoting a package from a channel will cause the package to rollback to an older version of the package. A ramification of enabling this condition is packages newer than the package at the head of the channel will be automatically uninstalled during a service rollback.
examples: |
  **Set up with just the defaults**

  ```ruby
  habitat_sup 'default'
  ```

  **Update listen ports and use Supervisor toml config**

  ```ruby
  habitat_sup 'test-options' do
    listen_http '0.0.0.0:9999'
    listen_gossip '0.0.0.0:9998'
    toml_config true
  end
  ```

  **Use with an on-prem Habitat Builder. Note: Access to public builder may not be available due to your company policies**

  ```ruby
  habitat_sup 'default' do
    bldr_url 'https://bldr.private.net'
  end
  ```

  **Using update_condition**

  ```ruby
  habitat_sup 'default' do
    bldr_url 'https://bldr.private.net'
    habitat_channel 'dev'
    update_condition 'track-channel'
  end
  ```

  **Provide event_stream_* information**

  ```ruby
  habitat_sup 'default' do
    license 'accept'
    event_stream_application 'myapp'
    event_stream_environment 'production'
    event_stream_site 'MySite'
    event_stream_url 'automate.private.net:4222'
    event_stream_token 'myawesomea2clitoken='
    event_stream_cert '/hab/cache/ssl/mycert.crt'
  end
  ```

  **Provide specific versions**

  ```ruby
  habitat_sup 'default' do
    bldr_url 'https://bldr.private.net'
    sup_version '1.5.50'
    launcher_version '13458'
    service_version '0.6.0' # WINDOWS ONLY
  end
  ```

  **Set latest version of packages to retain**

  habitat_sup 'default' do
    bldr_url 'https://bldr.private.net'
    sup_version '1.5.86'
    launcher_version '13458'
    service_version '0.6.0' # WINDOWS ONLY
    keep_latest '2'
  end
  ```
