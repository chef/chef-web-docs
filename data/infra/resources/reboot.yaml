---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: reboot
resource_description_list:
- markdown: |-
    Use the **reboot** resource to reboot a node, a necessary step with some installations on certain platforms. This resource is supported for use on the Microsoft Windows, macOS, and Linux platforms.
    In using this resource via notifications, it's important to *only* use immediate notifications. Delayed notifications produce unintuitive and probably undesired results.
resource_new_in: '12.0'
syntax_full_code_block: |-
  reboot 'name' do
    delay_mins      Integer # default value: 0
    reason          String # default value: "Reboot by Chef Infra Client"
    action          Symbol # defaults to :nothing if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`reboot` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`delay_mins` and `reason` are the properties available to this resource."
actions_list:
  :nothing:
    shortcode: resources_common_actions_nothing_default.md
  :request_reboot:
    markdown: Reboot a node at the end of a Chef Infra Client run.
  :reboot_now:
    markdown: Reboot a node so that the Chef Infra Client may continue the installation
      process.
  :cancel:
    markdown: Cancel a pending reboot request.
properties_list:
- property: delay_mins
  ruby_type: Integer
  required: false
  default_value: '0'
  description_list:
  - markdown: The amount of time (in minutes) to delay a reboot request.
- property: reason
  ruby_type: String
  required: false
  default_value: Reboot by Chef Infra Client
  description_list:
  - markdown: A string that describes the reboot action.
examples: |
  **Reboot a node immediately**

  ```ruby
  reboot 'now' do
    action :nothing
    reason 'Cannot continue Chef run without a reboot.'
    delay_mins 2
  end

  execute 'foo' do
    command '...'
    notifies :reboot_now, 'reboot[now]', :immediately
  end
  ```

  **Reboot a node at the end of a Chef Infra Client run**

  ```ruby
  reboot 'app_requires_reboot' do
    action :request_reboot
    reason 'Need to reboot when the run completes successfully.'
    delay_mins 5
  end
  ```

  **Cancel a reboot**

  ```ruby
  reboot 'cancel_reboot_request' do
    action :cancel
    reason 'Cancel a previous end-of-run reboot request.'
  end
  ```
