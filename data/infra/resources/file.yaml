---
resource_reference: true
properties_resources_common_windows_security: true
resources_common_atomic_update: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: file
resource_description_list:
- markdown: Use the **file** resource to manage files directly on a node.
- note:
    markdown: Use the **cookbook_file** resource to copy a file from a cookbook's
      `/files` directory. Use the **template** resource to create a file based on
      a template in a cookbook's `/templates` directory. And use the **remote_file**
      resource to transfer a file to a node from a remote location.
syntax_full_code_block: "file 'name' do\n  atomic_update              true, false\n
  \ backup                     Integer, false # default value: 5\n  checksum                   String\n
  \ content                    String\n  deny_rights                \n  force_unlink
  \              true, false # default value: false\n  manage_symlink_source      true,
  false\n  path                       String # default value: 'name' unless specified\n
  \ rights                     \n  action                     Symbol # defaults to
  :create if not specified\nend"
syntax_properties_list: 
syntax_full_properties_list:
- "`file` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`atomic_update`, `backup`, `checksum`, `content`, `deny_rights`, `force_unlink`,
  `manage_symlink_source`, `path`, and `rights` are the properties available to this
  resource."
actions_list:
  :nothing:
    shortcode: resources_common_actions_nothing.md
  :create:
    markdown: " (default)"
  :delete:
    markdown: 
  :touch:
    markdown: 
  :create_if_missing:
    markdown: 
properties_list:
- property: atomic_update
  ruby_type: true, false
  required: false
  default_value: False if modifying /etc/hosts, /etc/hostname, or /etc/resolv.conf
    within Docker containers. Otherwise default to the client.rb 'file_atomic_update'
    config value.
  description_list:
  - markdown: Perform atomic file updates on a per-resource basis. Set to true for
      atomic file updates. Set to false for non-atomic file updates. This setting
      overrides `file_atomic_update`, which is a global setting found in the `client.rb`
      file.
- property: backup
  ruby_type: Integer, false
  required: false
  default_value: '5'
  description_list:
  - markdown: The number of backups to be kept in `/var/chef/backup` (for UNIX- and
      Linux-based platforms) or `C:/chef/backup` (for the Microsoft Windows platform).
      Set to `false` to prevent backups from being kept.
- property: checksum
  ruby_type: String
  required: false
  description_list:
  - markdown: The SHA-256 checksum of the file. Use to ensure that a specific file
      is used. If the checksum does not match, the file is not used.
- property: content
  ruby_type: String
  required: false
  description_list:
  - markdown: A string that is written to the file. The contents of this property
      replace any previous content when this property has something other than the
      default value. The default behavior will not modify content.
- property: deny_rights
  ruby_type: ''
  required: false
  description_list:
  - markdown: 
- property: force_unlink
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: How Chef Infra Client handles certain situations when the target file
      turns out not to be a file. For example, when a target file is actually a symlink.
      Set to `true` for Chef Infra Client to delete the non-file target and replace
      it with the specified file. Set to `false` for Chef Infra Client to raise an
      error.
- property: manage_symlink_source
  ruby_type: true, false
  required: false
  description_list:
  - markdown: Change the behavior of the file resource if it is pointed at a symlink.
      When this value is set to true, Chef Infra Client will manage the symlink's
      permissions or will replace the symlink with a normal file if the resource has
      content. When this value is set to false, Chef Infra Client will follow the
      symlink and will manage the permissions and content of symlink's target file.
      The default behavior is true but emits a warning that the default value will
      be changed to false in a future version; setting this explicitly to true or
      false suppresses this warning.
- property: path
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: 'The full path to the file, including the file name and its extension.
      For example: /files/file.txt. Default value: the name of the resource block.
      Microsoft Windows: A path that begins with a forward slash `/` will point to
      the root of the current working directory of the Chef Infra Client process.
      This path can vary from system to system. Therefore, using a path that begins
      with a forward slash `/` is not recommended.'
- property: rights
  ruby_type: ''
  required: false
  description_list:
  - markdown: 
examples: 
