---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: openssl_ec_private_key
resource_description_list:
- markdown: Use the **openssl_ec_private_key** resource to generate an elliptic curve
    (EC) private key file. If a valid EC key file can be opened at the specified location,
    no new file will be created. If the EC key file cannot be opened, either because
    it does not exist or because the password to the EC key file does not match the
    password in the recipe, then it will be overwritten.
resource_new_in: '14.4'
syntax_full_code_block: |-
  openssl_ec_private_key 'name' do
    force           true, false # default value: false
    group           String, Integer
    key_cipher      String # default value: "des3"
    key_curve       String # default value: "prime256v1"
    key_pass        String
    mode            Integer, String # default value: "0600"
    owner           String, Integer
    path            String # default value: 'name' unless specified
    action          Symbol # defaults to :create if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`openssl_ec_private_key` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`force`, `group`, `key_cipher`, `key_curve`, `key_pass`, `mode`, `owner`, and `path`
  are the properties available to this resource."
actions_list:
  :create:
    markdown: Default. Create the EC private key file.
  :nothing:
    shortcode: resources_common_actions_nothing.md
properties_list:
- property: force
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Force creation of the key even if the same key already exists on the
      node.
- property: group
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The group ownership applied to all files created by the resource.
- property: key_cipher
  ruby_type: String
  required: false
  default_value: des3
  description_list:
  - markdown: The designed cipher to use when generating your key. Run `openssl list-cipher-algorithms`
      to see available options.
- property: key_curve
  ruby_type: String
  required: false
  default_value: prime256v1
  allowed_values: '"prime256v1", "secp224r1", "secp256k1", "secp384r1", "secp521r1"'
  description_list:
  - markdown: The desired curve of the generated key (if key_type is equal to 'ec').
      Run openssl ecparam -list_curves to see available options.
- property: key_pass
  ruby_type: String
  required: false
  description_list:
  - markdown: The desired passphrase for the key.
- property: mode
  ruby_type: Integer, String
  required: false
  default_value: '0600'
  description_list:
  - markdown: The permission mode applied to all files created by the resource.
- property: owner
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The owner applied to all files created by the resource.
- property: path
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: An optional property for specifying the path to write the file to if
      it differs from the resource block's name.
examples: |
  Generate a new ec privatekey with prime256v1 key curve and default des3 cipher

  ```ruby
  openssl_ec_private_key '/etc/ssl_files/eckey_prime256v1_des3.pem' do
    key_curve 'prime256v1'
    key_pass 'something'
    action :create
  end
  ```

  Generate a new EC private key with prime256v1 key curve and aes-128-cbc cipher

  ```ruby
  openssl_ec_private_key '/etc/ssl_files/eckey_prime256v1_des3.pem' do
    key_curve 'prime256v1'
    key_cipher 'aes-128-cbc'
    key_pass 'something'
    action :create
  end
  ```
