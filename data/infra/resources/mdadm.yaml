---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: mdadm
resource_description_list:
- markdown: Use the **mdadm** resource to manage RAID devices in a Linux environment
    using the mdadm utility. The mdadm resource will create and assemble an array,
    but it will not create the config file that is used to persist the array upon
    reboot. If the config file is required, it must be done by specifying a template
    with the correct array layout, and then by using the mount provider to create
    a file systems table (fstab) entry.
syntax_full_code_block: |-
  mdadm 'name' do
    bitmap           String
    chunk            Integer # default value: 16
    devices          Array
    layout           String
    level            Integer # default value: 1
    metadata         String # default value: "0.90"
    raid_device      String # default value: 'name' unless specified
    action           Symbol # defaults to :create if not specified
  end
syntax_properties_list:
- "`mdadm` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`bitmap`, `chunk`, `devices`, `layout`, `level`, `metadata`, and `raid_device`
  are the properties available to this resource."
actions_list:
  :assemble:
    markdown: Assemble a previously created array into an active array.
  :create:
    markdown: Default. Create an array with per-device superblocks. If an array already
      exists (but does not match), update that array to match.
  :nothing:
    shortcode: resources_common_actions_nothing.md
  :stop:
    markdown: Stop an active array.
properties_list:
- property: bitmap
  ruby_type: String
  required: false
  description_list:
  - markdown: The path to a file in which a write-intent bitmap is stored.
- property: chunk
  ruby_type: Integer
  required: false
  default_value: '16'
  description_list:
  - markdown: The chunk size. This property should not be used for a RAID 1 mirrored
      pair (i.e. when the `level` property is set to `1`).
- property: devices
  ruby_type: Array
  required: false
  description_list:
  - markdown: The devices to be part of a RAID array.
- property: layout
  ruby_type: String
  required: false
  description_list:
  - markdown: 'The RAID5 parity algorithm. Possible values: `left-asymmetric` (or
      `la`), `left-symmetric` (or ls), `right-asymmetric` (or `ra`), or `right-symmetric`
      (or `rs`).'
- property: level
  ruby_type: Integer
  required: false
  default_value: '1'
  description_list:
  - markdown: The RAID level.
- property: metadata
  ruby_type: String
  required: false
  default_value: '"0.90"'
  description_list:
  - markdown: The superblock type for RAID metadata.
- property: raid_device
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: An optional property to specify the name of the RAID device if it differs
      from the resource block's name.
examples: "
  Create and assemble a RAID 0 array\n\n  The mdadm command can be\
  \ used to create RAID arrays. For example, a RAID\n  0 array named `/dev/md0` with\
  \ 10 devices would have a command similar to\n  the following:\n\n  ```bash\n \
  \ mdadm --create /dev/md0 --level=0 --raid-devices=10 /dev/s01.../dev/s10\n  ```\n\
  \n  where `/dev/s01 .. /dev/s10` represents 10 devices (01, 02, 03, and so\n  on).\
  \ This same command, when expressed as a recipe using the **mdadm**\n  resource,\
  \ would be similar to:\n\n  ```ruby\n  mdadm '/dev/md0' do\n    devices [ '/dev/s01',\
  \ ... '/dev/s10' ]\n    level 0\n    action :create\n  end\n  ```\n\n  (again, where\
  \ `/dev/s01 .. /dev/s10` represents devices /dev/s01,\n  /dev/s02, /dev/s03, and\
  \ so on).\n\n  Create and assemble a RAID 1 array\n\n  ```ruby\n  mdadm '/dev/md0'\
  \ do\n    devices [ '/dev/sda', '/dev/sdb' ]\n    level 1\n    action [ :create,\
  \ :assemble ]\n  end\n  ```\n\n  Create and assemble a RAID 5 array\n\n  The mdadm\
  \ command can be used to create RAID arrays. For example, a RAID\n  5 array named\
  \ `/dev/sd0` with 4, and a superblock type of `0.90` would\n  be similar to:\n\n\
  \  ```ruby\n  mdadm '/dev/sd0' do\n    devices [ '/dev/s1', '/dev/s2', '/dev/s3',\
  \ '/dev/s4' ]\n    level 5\n    metadata '0.90'\n    chunk 32\n    action :create\n\
  \  end\n  ```\n"

