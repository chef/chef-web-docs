---
resource_reference: true
registry_key: true
resource: registry_key
resource_description_list:
- markdown: Use the **registry_key** resource to create and delete registry keys in
    Microsoft Windows.
- note:
    markdown: |-
      64-bit versions of Microsoft Windows have a 32-bit compatibility layer in the registry that reflects and redirects certain keys (and their values) into specific locations (or logical views) of the registry hive.

      Chef Infra Client can access any reflected or redirected registry key. The machine architecture of the system on which Chef Infra Client is running is used as the default (non-redirected) location. Access to the SysWow64 location is redirected must be specified. Typically, this is only necessary to ensure compatibility with 32-bit applications that are running on a 64-bit operating system.

      For more information, see: [Registry Reflection](https://docs.microsoft.com/en-us/windows/win32/winprog64/registry-reflection).
syntax_full_code_block: |-
  registry_key 'name' do
    architecture      Symbol # default value: :machine
    key               String # default value: 'name' unless specified
    recursive         true, false # default value: false
    values            Hash, Array # default value: []
    action            Symbol # defaults to :create if not specified
  end
syntax_properties_list: 
syntax_full_properties_list:
- "`registry_key` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`architecture`, `key`, `recursive`, and `values` are the properties available to
  this resource."
actions_list:
  :nothing:
    shortcode: resources_common_actions_nothing.md
  :create:
    markdown: " (default)"
  :create_if_missing:
    markdown: 
  :delete:
    markdown: 
  :delete_key:
    markdown: 
properties_list:
- property: architecture
  ruby_type: Symbol
  required: false
  default_value: ":machine"
  allowed_values: ":i386, :machine, :x86_64"
  description_list:
  - markdown: 
- property: key
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: 
- property: recursive
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: 
- property: values
  ruby_type: Hash, Array
  required: false
  default_value: "[]"
  description_list:
  - markdown: 
examples: |
  **Create a registry key**

  ```ruby
  registry_key 'HKEY_LOCAL_MACHINE\\path-to-key\\Policies\\System' do
    values [{
      name: 'EnableLUA',
      type: :dword,
      data: 0
    }]
    action :create
  end
  ```

  **Create a registry key with binary data: "\x01\x02\x03"**:

  ```ruby
  registry_key 'HKEY_CURRENT_USER\ChefTest' do
    values [{
      :name => "test",
      :type => :binary,
      :data => [0, 1, 2].map(&:chr).join
    }]
    action :create
  end
  ```

  **Create 32-bit key in redirected wow6432 tree**

  In 64-bit versions of Microsoft Windows, HKEY_LOCAL_MACHINE\SOFTWARE\Example is a re-directed key. In the following examples, because HKEY_LOCAL_MACHINE\SOFTWARE\Example is a 32-bit key, the output will be “Found 32-bit key” if they are run on a version of Microsoft Windows that is 64-bit:

  ```ruby
  registry_key 'HKEY_LOCAL_MACHINE\SOFTWARE\Example' do
    architecture :i386
    recursive true
    action :create
  end
  ```

  **Set proxy settings to be the same as those used by #{ChefUtils::Dist::Infra::PRODUCT}**

  ```ruby
  proxy = URI.parse(Chef::Config[:http_proxy])
  registry_key 'HKCU\Software\Microsoft\path\to\key\Internet Settings' do
    values [{name: 'ProxyEnable', type: :reg_dword, data: 1},
            {name: 'ProxyServer', data: "#{proxy.host}:#{proxy.port}"},
            {name: 'ProxyOverride', type: :reg_string, data: <local>},
           ]
    action :create
  end
  ```

  **Set the name of a registry key to "(Default)"**

  ```ruby
  registry_key 'Set (Default) value' do
    key 'HKLM\Software\Test\Key\Path'
    values [
      {name: '', type: :string, data: 'test'},
    ]
    action :create
  end
  ```

  **Delete a registry key value**

  ```ruby
  registry_key 'HKEY_LOCAL_MACHINE\SOFTWARE\path\to\key\AU' do
    values [{
      name: 'NoAutoRebootWithLoggedOnUsers',
      type: :dword,
      data: ''
      }]
    action :delete
  end
  ```

  Note: If data: is not specified, you get an error: Missing data key in RegistryKey values hash

  **Delete a registry key and its subkeys, recursively**

  ```ruby
  registry_key 'HKCU\SOFTWARE\Policies\path\to\key\Themes' do
    recursive true
    action :delete_key
  end
  ```

  Note: Be careful when using the :delete_key action with the recursive attribute. This will delete the registry key, all of its values and all of the names, types, and data associated with them. This cannot be undone by #{ChefUtils::Dist::Infra::PRODUCT}.
