---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: group
resource_description_list:
- markdown: Use the **group** resource to manage a local group.
syntax_full_code_block: |-
  group 'name' do
    append                true, false # default value: false
    comment               String
    excluded_members      String, Array # default value: []
    gid                   String, Integer
    group_name            String # default value: 'name' unless specified
    members               String, Array # default value: []
    non_unique            true, false # default value: false
    system                true, false # default value: false
    action                Symbol # defaults to :create if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`group` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`append`, `comment`, `excluded_members`, `gid`, `group_name`, `members`, `non_unique`,
  and `system` are the properties available to this resource."
actions_list:
  :create:
    markdown: (default) Create a group. If a group already exists (but does not match),
      update that group to match.
  :manage:
    markdown: Manage an existing group. This action does nothing if the group does
      not exist.
  :modify:
    markdown: Modify an existing group. This action raises an exception if the group
      does not exist.
  :nothing:
    shortcode: resources_common_actions_nothing.md
  :remove:
    markdown: Remove a group.
properties_list:
- property: append
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: How members should be appended and/or removed from a group. When true,
      `members` are appended and `excluded_members` are removed. When `false`, group
      members are reset to the value of the `members` property.
- property: comment
  ruby_type: String
  required: false
  new_in: '14.9'
  description_list:
  - markdown: Specifies a comment to associate with the local group.
- property: excluded_members
  ruby_type: String, Array
  required: false
  default_value: "[]"
  description_list:
  - markdown: Remove users from a group. May only be used when `append` is set to
      `true`.
- property: gid
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The identifier for the group.
- property: group_name
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: 'The name of the group. Default value: the `name` of the resource

      block. See "Syntax" section above for more information.'
- property: members
  ruby_type: String, Array
  required: false
  default_value: "[]"
  description_list:
  - markdown: 'Which users should be set or appended to a group. When more than one
      group member is identified, the list of members should be an array: `members
      [''user1'', ''user2'']`.'
- property: non_unique
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Allow gid duplication. May only be used with the `Groupadd` user resource
      provider.
- property: system
  ruby_type: true, false
  required: false
  default_value: 'false'
  description_list:
  - markdown: Set to `true` if the group belongs to a system group.
examples: |
  The following examples demonstrate various approaches for using the **group** resource in recipes:

  **Append users to groups**:

  ```ruby
  group 'www-data' do
    action :modify
    members 'maintenance'
    append true
  end
  ```

  **Add a user to group on the Windows platform**:

  ```ruby
  group 'Administrators' do
    members ['domain\foo']
    append true
    action :modify
  end
  ```
