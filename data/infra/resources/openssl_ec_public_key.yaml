---
resource_reference: true
resources_common_guards: true
resources_common_notification: true
resources_common_properties: true
resource: openssl_ec_public_key
resource_description_list:
- markdown: Use the **openssl_ec_public_key** resource to generate elliptic curve
    (EC) public key files from a given EC private key.
resource_new_in: '14.4'
syntax_full_code_block: |-
  openssl_ec_public_key 'name' do
    group                    String, Integer
    mode                     Integer, String # default value: "0640"
    owner                    String, Integer
    path                     String # default value: 'name' unless specified
    private_key_content      String
    private_key_pass         String
    private_key_path         String
    action                   Symbol # defaults to :create if not specified
  end
syntax_properties_list:
syntax_full_properties_list:
- "`openssl_ec_public_key` is the resource."
- "`name` is the name given to the resource block."
- "`action` identifies which steps Chef Infra Client will take to bring the node into
  the desired state."
- "`group`, `mode`, `owner`, `path`, `private_key_content`, `private_key_pass`, and
  `private_key_path` are the properties available to this resource."
actions_list:
  :create:
    markdown:
  :nothing:
    shortcode: resources_common_actions_nothing.md
properties_list:
- property: group
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The group ownership applied to all files created by the resource.
- property: mode
  ruby_type: Integer, String
  required: false
  default_value: '0640'
  description_list:
  - markdown: The permission mode applied to all files created by the resource.
- property: owner
  ruby_type: String, Integer
  required: false
  description_list:
  - markdown: The owner applied to all files created by the resource.
- property: path
  ruby_type: String
  required: false
  default_value: The resource block's name
  description_list:
  - markdown: An optional property for specifying the path to write the file to if
      it differs from the resource block's name.
- property: private_key_content
  ruby_type: String
  required: false
  description_list:
  - markdown: The content of the private key including new lines. This property is
      used in place of private_key_path in instances where you want to avoid having
      to first write the private key to disk
- property: private_key_pass
  ruby_type: String
  required: false
  description_list:
  - markdown: The passphrase of the provided private key.
- property: private_key_path
  ruby_type: String
  required: false
  description_list:
  - markdown: The path to the private key file.
examples: |
  Generate new EC public key from a private key on disk

  ```ruby
  openssl_ec_public_key '/etc/ssl_files/eckey_prime256v1_des3.pub' do
    private_key_path '/etc/ssl_files/eckey_prime256v1_des3.pem'
    private_key_pass 'something'
    action :create
  end
  ```

  Generate new ec public key by passing in a private key

  ```ruby
  openssl_ec_public_key '/etc/ssl_files/eckey_prime256v1_des3_2.pub' do
    private_key_content "-----BEGIN EC PRIVATE KEY-----
  MHcCAQEEII2VAU9re44mAUzYPWCg+qqwdmP8CplsEg0b/DYPXLg2oAoGCCqGSM49
  AwEHoUQDQgAEKkpMCbIQ2C6Qlp/B+Odp1a9Y06Sm8yqPvCVIkWYP7M8PX5+RmoIv
  jGBVf/+mVBx77ji3NpTilMUt2KPZ87lZ3w==
  -----END EC PRIVATE KEY-----
  "
    action :create
  end
  ```
